syntax = "proto3";

package nextone.identity;
option csharp_namespace = "NextOne.Protobuf.Identity";

import "common/common.proto";
import "google/protobuf/wrappers.proto";

service GrpcIdentityService {
  rpc SayHello (nextone.common.HelloRequest) returns (nextone.common.HelloReply);

  rpc GetIdentityUser(GetIdentityUserRequest) returns(GetIdentityUserResponse);
 
  rpc CreateIdentityUser(CreateIdentityUserRequest) returns(CreateIdentityUserResponse);
  rpc ActiveIdentityUser(ActiveIdentityUserRequest) returns(ActiveIdentityUserResponse);
  rpc UpdateIdentityUser(UpdateIdentityUserRequest) returns(UpdateIdentityUserResponse);
  rpc UpdateIdentityUserRoles(UpdateIdentityUserRolesRequest) returns(UpdateIdentityUserRolesResponse);

  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse);

  rpc CreateIdentityRole(CreateIdentityRoleRequest) returns(CreateIdentityRoleResponse);
  rpc UpdateIdentityRole(UpdateIdentityRoleRequest) returns(UpdateIdentityRoleResponse);
  rpc DeleteIdentityRole(DeleteIdentityRoleRequest) returns(DeleteIdentityRoleResponse);
}
message GetIdentityUserRequest{
	string userId = 1;
}
message GetIdentityUserResponse{
  string userId = 1;
  google.protobuf.StringValue email = 2;
  string userName = 3;
  repeated string roleNames = 4; 
}

message CreateIdentityUserRequest{
  string userId = 1;
  google.protobuf.StringValue email = 2;
  string userName = 3;
  repeated string roleNames = 4;

}

message CreateIdentityUserResponse{
  bool isSuccess = 1;
  google.protobuf.StringValue IdentityUserId = 2;
  nextone.common.Error error = 3; 
}

message ActiveIdentityUserRequest{
 string userId = 1;
 bool active = 2;
}

message ActiveIdentityUserResponse{
  bool isSuccess = 1;
  nextone.common.Error error = 2; 
}

message UpdateIdentityUserRequest{
  string userId = 1;
  google.protobuf.StringValue email = 2;
  string userName = 3;
}

message UpdateIdentityUserResponse{
  bool isSuccess = 1;
  nextone.common.Error error = 2; 
}

message UpdateIdentityUserRolesRequest{
  string userId = 1;
  repeated string roleNames = 2;
}

message UpdateIdentityUserRolesResponse{
  bool isSuccess = 1;
  nextone.common.Error error = 2; 
}

message ResetPasswordRequest{
  string userId = 1;
  string newPassword = 2;
}

message ResetPasswordResponse{
  bool isSuccess = 1;
  nextone.common.Error error = 2; 
}

message ChangePasswordRequest{
  string userId = 1;
  string oldPassword = 2;
  string newPassword = 3;
}

message ChangePasswordResponse{
  bool isSuccess = 1;
  nextone.common.Error error = 2; 
}

//role
message CreateIdentityRoleRequest{
  string roleName = 1;
  string roleDisplayName = 2;
}

message CreateIdentityRoleResponse{
  bool isSuccess = 1;
  nextone.common.Error error = 2; 
}

message UpdateIdentityRoleRequest{
  string roleName = 1;
  string roleDisplayName = 2;
}

message UpdateIdentityRoleResponse{
  bool isSuccess = 1;
  nextone.common.Error error = 2; 
}

message DeleteIdentityRoleRequest{
  string roleName = 1;
}

message DeleteIdentityRoleResponse{
  bool isSuccess = 1;
  nextone.common.Error error = 2; 
}