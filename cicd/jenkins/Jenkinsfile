pipeline {
  agent any
  // agent {
  //   //label 'master'
  //   //docker { image 'node:latest' }
  //   //dockerfile true
  // }
  environment {
    registryCredential = 'hub.tris.vn' 
    CONTAINER_NAME = 'test-jenkins-node-service'
    ACTION_TYPE = sh(script: "echo \"${env.gitlabActionType}\" | sed 's|/|-|g'", returnStdout: true).trim().toLowerCase()
    PARSED_VERSION = sh(returnStdout: true, script: "git log -1 | sed -r 's/[[:alnum:]]+=/\\n&/g' | awk -F= '{if(\$1==\"VERSION\"){print \$2} else {print \"\"}}' | sed ':a;N;\$!ba;s/\\n//g' | awk '{if(\$1==\"\"){print \"latest\"} else {print \$1}}'").trim()
    APP_VERSION = sh(script: "echo \"$PARSED_VERSION\"", returnStdout: true)
  }

  stages {
    stage('NextOne'){
      parallel{
          stage('MapService') {
            when{ 
              anyOf{
                changeset "cicd/jenkins/Jenkinsfile"
                changeset 'src/MapService/**'
                expression { service == 'map'}
              }
              
            }
            stages {
              stage('Info') {
                steps {
                  echo "Current build number: ${currentBuild.number}"
                  script {
                      def commit = sh(returnStdout: true, script: 'git log -1 --pretty=%B | cat')
                      echo "Last commit : ${commit}"
                      echo "APP_VERSION : ${APP_VERSION}"
                      echo "BUILD_NUMBER : ${BUILD_NUMBER}"
                  }
                }
              }
              stage('Build'){
                parallel {
                  stage('Build iamge') {
                    // agent {
                    //     docker { image 'node:latest' }
                    // }
                    // environment {
                    //   HOME = '.'
                    // }
                    steps {
                      sh "APP_VERSION=${BUILD_NUMBER} docker-compose build map"
                    }
                  }
                }
              }

              stage('Release'){
                  steps {
                    //sh 'docker tag hub.tris.vn/nextone/map hub.tris.vn/dataapi:version
                    withCredentials([usernamePassword( credentialsId: "${registryCredential}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh 'docker login -u ${USERNAME} -p ${PASSWORD} ${registryCredential}'
                        sh 'docker push hub.tris.vn/nextone/map:${BUILD_NUMBER}'
                    }
                  }
              }

              stage('Clean'){
                steps{
                  sh "APP_VERSION=${BUILD_NUMBER} docker-compose down map --rmi 'all' || true"
                }
              }

              stage('DeployStaging') {
                when {
                  expression { GIT_BRANCH == 'origin/main' }
                }
                steps {
                  echo 'TODO: deploy'
                }
              }

              stage('SystemTest') {
                steps{
                  echo 'system test'
                }
              }
            }
          }

          stage('MapWeb') {
            when{ 
              anyOf {
                changeset "cicd/jenkins/Jenkinsfile"
                changeset "src/web-map/**"
                expression { service == 'map-web'}
              }
            }
            stages {
              stage('Info') {
                steps {
                  echo "Current build number: ${currentBuild.number}"
                  script {
                      def commit = sh(returnStdout: true, script: 'git log -1 --pretty=%B | cat')
                      echo "Last commit : ${commit}"
                      echo "APP_VERSION : ${APP_VERSION}"
                      echo "BUILD_NUMBER : ${BUILD_NUMBER}"
                  }
                }
              }
              stage('Build'){
                parallel {
                  stage('Build iamge') {
                    // agent {
                    //     docker { image 'node:latest' }
                    // }
                    // environment {
                    //   HOME = '.'
                    // }
                    steps {
                      sh "APP_VERSION=${BUILD_NUMBER} docker-compose build map-web"
                    }
                  }
                }
              }

              stage('Release'){
                  steps {
                    //sh 'docker tag hub.tris.vn/dataapi hub.tris.vn/dataapi:version
                    withCredentials([usernamePassword( credentialsId: "${registryCredential}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh 'docker login -u ${USERNAME} -p ${PASSWORD} ${registryCredential}'
                        sh 'docker push hub.tris.vn/nextone/map-web:${BUILD_NUMBER}'
                    }
                  }
              }

              stage('Clean'){
                steps{
                  sh "APP_VERSION=${BUILD_NUMBER} docker-compose down map-web --rmi 'all' || true"
                }
              }

              stage('DeployStaging') {
                when {
                  expression { GIT_BRANCH == 'origin/main' }
                }
                steps {
                  echo 'TODO: deploy'
                }
              }

              stage('SystemTest') {
                steps{
                  echo 'system test'
                }
              }
            }
          }

          stage('IdentitySerivce') {
            when{ 
              anyOf {
                changeset "cicd/jenkins/Jenkinsfile"
                changeset "src/Identity/**"
                changeset "src/SharedDomain/**"
                changeset "src/Libs/NextOne.Shared/**"
                changeset "src/Libs/NextOne.Infrastructure.Core/**"
                expression { service == 'identity'}
              }
            }
            stages {
              stage('Info') {
                steps {
                  echo "Current build number: ${currentBuild.number}"
                  script {
                      def commit = sh(returnStdout: true, script: 'git log -1 --pretty=%B | cat')
                      echo "Last commit : ${commit}"
                      echo "APP_VERSION : ${APP_VERSION}"
                      echo "BUILD_NUMBER : ${BUILD_NUMBER}"
                  }
                }
              }
              stage('Build'){
                parallel {
                  stage('Build iamge') {
                    // agent {
                    //     docker { image 'node:latest' }
                    // }
                    // environment {
                    //   HOME = '.'
                    // }
                    steps {
                      sh "APP_VERSION=${BUILD_NUMBER} docker-compose build identity"
                    }
                  }
                }
              }

              stage('Release'){
                  steps {
                    //sh 'docker tag hub.tris.vn/dataapi hub.tris.vn/dataapi:version
                    withCredentials([usernamePassword( credentialsId: "${registryCredential}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh 'docker login -u ${USERNAME} -p ${PASSWORD} ${registryCredential}'
                        sh 'docker push hub.tris.vn/nextone/identity:${BUILD_NUMBER}'
                    }
                  }
              }

              stage('Clean'){
                steps{
                  sh "APP_VERSION=${BUILD_NUMBER} docker-compose down identity --rmi 'all' || true"
                }
              }

              stage('DeployStaging') {
                when {
                  expression { GIT_BRANCH == 'origin/main' }
                }
                steps {
                  echo 'TODO: deploy'
                }
              }

              stage('SystemTest') {
                steps{
                  echo 'system test'
                }
              }
            }
          }
      }
    }

  }

  post {
    success {
      script {
        sh 'echo Pipeline successfully run'
      }
    }
    always {
      sh 'echo Done'
    }
  }
}
